/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Klijent;
import domen.Proizvod;
import domen.Racun;
import domen.Radnik;
import domen.StavkaRacuna;
import domen.TipUsluge;
import domen.Usluga;
import java.awt.Dialog;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import kontrolor.Kontrolor;
import tabela.TblModelProizvodi;
import tabela.TblModelStavkeRacuna;
import tabela.TblModelUsluge;

/**
 *
 * @author Nadin kompjuter
 */
public class FMRacun extends javax.swing.JDialog {

    /**
     * Creates new form FMRaun
     */
    List<Proizvod> lista_proizvoda;
    
    public FMRacun(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        lista_proizvoda = new LinkedList<>();
        initComponents();
        postaviUlogovanogRadnika();
        PostaviDocumentListenerPretraga();
        centrirajFormu();
        postaviModele();
        popuniPoljaZaRacun();
        popuniTipoveUsluga();
    }

    public FMRacun(Dialog owner, boolean modal) {
        super(owner, modal);
        lista_proizvoda = new LinkedList<>();
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtxtBrojRacuna = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtDatum = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcbKlijent = new javax.swing.JComboBox<String>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpnlStavkeRacuna = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblStavkeRacuna = new javax.swing.JTable();
        jbtnObrisiStavku = new javax.swing.JButton();
        jbtnSacuvajRacun = new javax.swing.JButton();
        jpnlUsluge = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblUsluge = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jcbTipUsluge = new javax.swing.JComboBox<String>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtxtUsluga = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtxtCenaUsluge = new javax.swing.JTextField();
        jbtnDodajUslugu = new javax.swing.JButton();
        jpnlProizvodi = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblProizvodi = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jtxtPretraga = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtxtProizvod = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtxtKolicinaProizvoda = new javax.swing.JTextField();
        jtxtCenaProizvoda = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jbtnDodajProizvod = new javax.swing.JButton();
        jcbRadnik = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Forma za kreiranje racuna");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Broj racuna:");

        jtxtBrojRacuna.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtBrojRacuna.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Datum:");

        jtxtDatum.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtDatum.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Radnik:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Klijent:");

        jcbKlijent.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jtblStavkeRacuna.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtblStavkeRacuna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblStavkeRacuna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtblStavkeRacunaMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jtblStavkeRacuna);

        jbtnObrisiStavku.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnObrisiStavku.setText(" Obrisi stavku");
        jbtnObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiStavkuActionPerformed(evt);
            }
        });

        jbtnSacuvajRacun.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbtnSacuvajRacun.setText("Sacuvaj racun");
        jbtnSacuvajRacun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajRacunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlStavkeRacunaLayout = new javax.swing.GroupLayout(jpnlStavkeRacuna);
        jpnlStavkeRacuna.setLayout(jpnlStavkeRacunaLayout);
        jpnlStavkeRacunaLayout.setHorizontalGroup(
            jpnlStavkeRacunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlStavkeRacunaLayout.createSequentialGroup()
                .addGroup(jpnlStavkeRacunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlStavkeRacunaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jbtnObrisiStavku))
                    .addGroup(jpnlStavkeRacunaLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jbtnSacuvajRacun, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnlStavkeRacunaLayout.setVerticalGroup(
            jpnlStavkeRacunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlStavkeRacunaLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jpnlStavkeRacunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnObrisiStavku)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jbtnSacuvajRacun)
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Stavke racuna", jpnlStavkeRacuna);

        jtblUsluge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtblUsluge.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblUsluge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtblUslugeMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtblUsluge);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filter", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jcbTipUsluge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbTipUsluge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipUslugeActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Tip usluge:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jcbTipUsluge, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbTipUsluge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(31, 31, 31))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Usluga:");

        jtxtUsluga.setEditable(false);
        jtxtUsluga.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtUsluga.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Cena:");

        jtxtCenaUsluge.setEditable(false);
        jtxtCenaUsluge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtCenaUsluge.setEnabled(false);

        jbtnDodajUslugu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnDodajUslugu.setText("Dodaj");
        jbtnDodajUslugu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajUsluguActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlUslugeLayout = new javax.swing.GroupLayout(jpnlUsluge);
        jpnlUsluge.setLayout(jpnlUslugeLayout);
        jpnlUslugeLayout.setHorizontalGroup(
            jpnlUslugeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlUslugeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlUslugeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE))
                .addGroup(jpnlUslugeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlUslugeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpnlUslugeLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnDodajUslugu)
                            .addGap(63, 63, 63))
                        .addGroup(jpnlUslugeLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jpnlUslugeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel11))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlUslugeLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jpnlUslugeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtUsluga, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtCenaUsluge, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))))
        );
        jpnlUslugeLayout.setVerticalGroup(
            jpnlUslugeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlUslugeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpnlUslugeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlUslugeLayout.createSequentialGroup()
                        .addGroup(jpnlUslugeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtUsluga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jpnlUslugeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtCenaUsluge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(33, 33, 33)
                        .addComponent(jbtnDodajUslugu))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Usluge", jpnlUsluge);

        jtblProizvodi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtblProizvodi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblProizvodi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtblProizvodiMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jtblProizvodi);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Pretraga:");

        jtxtPretraga.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Proizvod:");

        jtxtProizvod.setEditable(false);
        jtxtProizvod.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtProizvod.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Kolicijna:");

        jtxtKolicinaProizvoda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jtxtCenaProizvoda.setEditable(false);
        jtxtCenaProizvoda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtCenaProizvoda.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Cena:");

        jbtnDodajProizvod.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnDodajProizvod.setText("Dodaj");
        jbtnDodajProizvod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajProizvodActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlProizvodiLayout = new javax.swing.GroupLayout(jpnlProizvodi);
        jpnlProizvodi.setLayout(jpnlProizvodiLayout);
        jpnlProizvodiLayout.setHorizontalGroup(
            jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlProizvodiLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnlProizvodiLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(43, 43, 43)
                        .addComponent(jtxtPretraga)))
                .addGroup(jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlProizvodiLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnDodajProizvod)
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlProizvodiLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtProizvod)
                            .addComponent(jtxtCenaProizvoda)
                            .addComponent(jtxtKolicinaProizvoda, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                        .addGap(29, 29, 29))))
        );
        jpnlProizvodiLayout.setVerticalGroup(
            jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlProizvodiLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtxtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpnlProizvodiLayout.createSequentialGroup()
                        .addGroup(jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jtxtProizvod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jtxtKolicinaProizvoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jpnlProizvodiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jtxtCenaProizvoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnDodajProizvod))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Proizvodi", jpnlProizvodi);

        jcbRadnik.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtxtBrojRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jcbKlijent, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(239, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jtxtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jtxtBrojRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbKlijent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtblProizvodiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblProizvodiMousePressed
        Proizvod p = vratiIzabranProizvodIzTabele();
        jbtnDodajProizvod.setEnabled(true);

        jtxtProizvod.setText(p.getNaziv());
        jtxtCenaProizvoda.setText(p.getCena() + "");
        jtxtKolicinaProizvoda.setText("1");
        jtxtCenaProizvoda.setEditable(false);
    }//GEN-LAST:event_jtblProizvodiMousePressed

    private void jbtnDodajProizvodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajProizvodActionPerformed
        try {
            String racunID = jtxtBrojRacuna.getText().trim();
            Proizvod p = vratiIzabranProizvodIzTabele();
            int kolicina = Integer.parseInt(jtxtKolicinaProizvoda.getText().trim());
            TblModelStavkeRacuna tmp = (TblModelStavkeRacuna) jtblStavkeRacuna.getModel();
            tmp.dodajStavkuProizvod(p, kolicina, racunID);
        } catch (NumberFormatException nfe) {
            nfe.printStackTrace();
        }

    }//GEN-LAST:event_jbtnDodajProizvodActionPerformed

    private void jbtnSacuvajRacunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajRacunActionPerformed

          Klijent k = (Klijent) jcbKlijent.getSelectedItem();
          if(!k.isAktivan()){
              JOptionPane.showMessageDialog(this, "Nije mogué kreirati racun za deaktiviranog klijenta");
              return;
            }   

        TblModelStavkeRacuna tmsr = (TblModelStavkeRacuna) jtblStavkeRacuna.getModel();
        Racun racun = tmsr.vratiRacun();

        try {
            if (racun.getLista_stavki().isEmpty()) {
      JOptionPane.showMessageDialog(this, "Nije uneta ni jedna stavka racuna", "Unosenje računa", JOptionPane.ERROR_MESSAGE);
           return;
            }
            racun.setRacunID(jtxtBrojRacuna.getText().trim());
            String sdatum = jtxtDatum.getText().trim();
            racun.setDatum(new SimpleDateFormat("dd.MM.yyyy.").parse(sdatum));
            racun.setKlijent((Klijent) jcbKlijent.getSelectedItem());
            racun.setRadnik((Radnik) jcbRadnik.getSelectedItem());
            double ukupnaVrednost = 0;
            for (StavkaRacuna sr : racun.getLista_stavki()) {
                ukupnaVrednost += sr.getIznos();
            }
            racun.setUkupnaVrednost(ukupnaVrednost);
            Kontrolor.getInstance().sacuvajRacun(racun);
            FMKlijent fmKlijent = (FMKlijent) Kontrolor.getInstance().getMapa().get("forma_klijent");
            if (fmKlijent != null) {
                fmKlijent.popuniRacuneZaIzabranogKlijenta();
            }
          JOptionPane.showMessageDialog(this, "Sistem je zapamtio račun", "Unosenje računa", JOptionPane.INFORMATION_MESSAGE);

            this.dispose();

        } catch (Exception e) {
      JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti račun", "Unosenje računa", JOptionPane.ERROR_MESSAGE);

          //  JOptionPane.showMessageDialog(this, e.getMessage());
        }


    }//GEN-LAST:event_jbtnSacuvajRacunActionPerformed

    private void jtblUslugeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblUslugeMousePressed
        Usluga u = vratiIzabranuUsluguIzTabele();
        jtxtUsluga.setText(u.getNaziv());
        jtxtCenaUsluge.setText(u.getCena() + "");
        jtxtCenaProizvoda.setEditable(false);
        jbtnDodajUslugu.setEnabled(true);


    }//GEN-LAST:event_jtblUslugeMousePressed

    private void jbtnDodajUsluguActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajUsluguActionPerformed
        String racunID = jtxtBrojRacuna.getText().trim();
        Usluga u = vratiIzabranuUsluguIzTabele();
        TblModelStavkeRacuna tms = (TblModelStavkeRacuna) jtblStavkeRacuna.getModel();
        try {
            tms.dodajStavkuUsluga(u, racunID);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_jbtnDodajUsluguActionPerformed

    private void jcbTipUslugeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipUslugeActionPerformed
        jbtnDodajUslugu.setEnabled(false);

        TipUsluge tu = (TipUsluge) jcbTipUsluge.getSelectedItem();
        List<Usluga> lu = new LinkedList<>();
        try {
            lu = Kontrolor.getInstance().vratiListuUsluga();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        List<Usluga> filtriranaLista = new LinkedList<>();
        if (tu == null || tu.getTipUslugeID() == -1) {
            filtriranaLista = lu;
        }
        for (Usluga usluga : lu) {
            if (usluga.getTipUsluge().getTipUslugeID() == tu.getTipUslugeID()) {
                filtriranaLista.add(usluga);
            }
        }

        TblModelUsluge tbl = new TblModelUsluge(filtriranaLista);
        jtblUsluge.setModel(tbl);

    }//GEN-LAST:event_jcbTipUslugeActionPerformed

    private void jbtnObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiStavkuActionPerformed
        int red = jtblStavkeRacuna.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Morate selektovati stavku koju zelite da obrisete");
        } else {
            TblModelStavkeRacuna tmsr = (TblModelStavkeRacuna) jtblStavkeRacuna.getModel();
            tmsr.obrisiStavku(red);
        }

    }//GEN-LAST:event_jbtnObrisiStavkuActionPerformed

    private void jtblStavkeRacunaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblStavkeRacunaMousePressed
        jbtnObrisiStavku.setEnabled(true);


    }//GEN-LAST:event_jtblStavkeRacunaMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbtnDodajProizvod;
    private javax.swing.JButton jbtnDodajUslugu;
    private javax.swing.JButton jbtnObrisiStavku;
    private javax.swing.JButton jbtnSacuvajRacun;
    private javax.swing.JComboBox<String> jcbKlijent;
    private javax.swing.JComboBox<String> jcbRadnik;
    private javax.swing.JComboBox<String> jcbTipUsluge;
    private javax.swing.JPanel jpnlProizvodi;
    private javax.swing.JPanel jpnlStavkeRacuna;
    private javax.swing.JPanel jpnlUsluge;
    private javax.swing.JTable jtblProizvodi;
    private javax.swing.JTable jtblStavkeRacuna;
    private javax.swing.JTable jtblUsluge;
    private javax.swing.JTextField jtxtBrojRacuna;
    private javax.swing.JTextField jtxtCenaProizvoda;
    private javax.swing.JTextField jtxtCenaUsluge;
    private javax.swing.JTextField jtxtDatum;
    private javax.swing.JTextField jtxtKolicinaProizvoda;
    private javax.swing.JTextField jtxtPretraga;
    private javax.swing.JTextField jtxtProizvod;
    private javax.swing.JTextField jtxtUsluga;
    // End of variables declaration//GEN-END:variables

    private void centrirajFormu() {
        setLocationRelativeTo(null);
    }

    private void postaviModele() {
        TblModelStavkeRacuna tmst = new TblModelStavkeRacuna(new Racun());
        jtblStavkeRacuna.setModel(tmst);

        try {
            List<Proizvod> lista_pro = Kontrolor.getInstance().vratiListuProizvoda();
            TblModelProizvodi tmp = new TblModelProizvodi(lista_pro);
            jtblProizvodi.setModel(tmp);
            lista_proizvoda = lista_pro;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }

        try {
            List<Usluga> lista_usluga = Kontrolor.getInstance().vratiListuUsluga();
            TblModelUsluge tmu = new TblModelUsluge(lista_usluga);
            jtblUsluge.setModel(tmu);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private Proizvod vratiIzabranProizvodIzTabele() {
        TblModelProizvodi tmp = (TblModelProizvodi) jtblProizvodi.getModel();
        Proizvod p = tmp.vratiProizvod(jtblProizvodi.getSelectedRow());
        return p;
    }

    private void popuniPoljaZaRacun() {
        popuniDatum();
        popuniRacunID();
        popuniRadnika();
        popuniComboKlijent();

    }

    private void popuniRacunID() {
        Calendar date = new GregorianCalendar();
        int year = date.get(Calendar.YEAR);
        int month = date.get(Calendar.MONTH)+1;

        int day = date.get(Calendar.DAY_OF_MONTH);
        int hour = date.get(Calendar.HOUR_OF_DAY);
        int minute = date.get(Calendar.MINUTE);
        int second = date.get(Calendar.SECOND);

        String id = "R-" + year + "/" + month + "/" + day + "/" + hour + "/" + minute+"/" + second;
        jtxtBrojRacuna.setText(id);
        jtxtBrojRacuna.setEditable(false);
    }

    private void popuniDatum() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy.");
        jtxtDatum.setText(sdf.format(new Date()));
        jtxtDatum.setEditable(false);
    }

    private void popuniComboKlijent() {
        try {
            List<Klijent> lista_klijenata = Kontrolor.getInstance().vratiListuKlijenata();
            jcbKlijent.setModel(new DefaultComboBoxModel(lista_klijenata.toArray()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void popuniRadnika() {
        List<Radnik> radnici = new LinkedList<>();
        Radnik radnik = (Radnik) Kontrolor.getInstance().getMapa().get("Ulogovan_radnik");
        radnici.add(radnik);
        jcbRadnik.setModel(new DefaultComboBoxModel(radnici.toArray()));
        jcbRadnik.setEnabled(false);
    }

    private void postaviIzabranogKlijenta() {

        jcbKlijent.setSelectedItem(Kontrolor.getInstance().getMapa().get("izabrani_klijent_detalji"));
        jcbKlijent.setEnabled(false);
    }

    private Usluga vratiIzabranuUsluguIzTabele() {
        TblModelUsluge tmu = (TblModelUsluge) jtblUsluge.getModel();
        Usluga u = tmu.vratiUslugu(jtblUsluge.getSelectedRow());
        return u;
    }

    private void popuniTipoveUsluga() {
        try {
            List<TipUsluge> tipovi = Kontrolor.getInstance().vratiTipoveUsluga();
            TipUsluge tip = new TipUsluge(-1, "Sve usluge");
            tipovi.add(tip);

            jcbTipUsluge.setModel(new DefaultComboBoxModel(tipovi.toArray()));
            jcbTipUsluge.setSelectedItem(tip);

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void postaviUlogovanogRadnika() {
        Radnik radnik = (Radnik) Kontrolor.getInstance().getMapa().get("Ulogovan_radnik");
        this.setTitle(this.getTitle() + " Radnik: " + radnik);
    }

    public void PostaviDocumentListenerPretraga() {
        DocumentListener documentListener = new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent documentEvent) {
                documentListenerPretraga();
            }

            @Override
            public void insertUpdate(DocumentEvent documentEvent) {
                documentListenerPretraga();
            }

            @Override
            public void removeUpdate(DocumentEvent documentEvent) {
                documentListenerPretraga();
            }
        };
        jtxtPretraga.getDocument().addDocumentListener(documentListener);
    }

    private void documentListenerPretraga() {
        jbtnDodajProizvod.setEnabled(false);

        String pretraga = jtxtPretraga.getText().trim();

        List<Proizvod> filtrirana_lista = new LinkedList<>();

        for (Proizvod p : lista_proizvoda) {
            if (p.getNaziv().toUpperCase().contains(pretraga.toUpperCase())) {
                filtrirana_lista.add(p);
                ;
            }
        }
        TblModelProizvodi tbl = new TblModelProizvodi(filtrirana_lista);
        jtblProizvodi.setModel(tbl);
    }

    private void srediFormu() {
        int aktivnaForma = Kontrolor.getInstance().getAktivnaForma();
        jbtnDodajUslugu.setEnabled(false);
        jbtnDodajProizvod.setEnabled(false);
        jbtnObrisiStavku.setEnabled(false);

        // setSize(670, 700);
        // setLocation(680, 0);
        if (aktivnaForma == util.Util.POPUNI_ZA_KLIJENTA) {

            postaviUlogovanogRadnika();
            PostaviDocumentListenerPretraga();
            centrirajFormu();
            postaviModele();
            popuniPoljaZaRacun();
            postaviIzabranogKlijenta();
            popuniTipoveUsluga();

        }

        //samo 1 na pogledaj detalje za racun
        if (aktivnaForma == util.Util.POPUNI_ZA_RACUN) {

            postaviUlogovanogRadnika();
            PostaviDocumentListenerPretraga();
            centrirajFormu();
                        popuniComboKlijent();

            popuniSvaPolja();
          
            onemoguciIzmenu();

        }

    }

    private void popuniSvaPolja() {
        Racun racun = (Racun) Kontrolor.getInstance().getMapa().get("izabrani_racun");
       
        jtxtBrojRacuna.setText(racun.getRacunID());
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy.");
        jtxtDatum.setText(sdf.format(racun.getDatum()));
        jcbKlijent.setSelectedItem(racun.getKlijent());

        List<Radnik> radnik = new LinkedList<>();
        radnik.add(racun.getRadnik());
        jcbRadnik.setModel(new DefaultComboBoxModel(radnik.toArray()));
        try {

            Racun racunSaStavkama = Kontrolor.getInstance().vratiStavkeRacunaZaRacun(racun);
            TblModelStavkeRacuna tmsr = new TblModelStavkeRacuna(racunSaStavkama);
            jtblStavkeRacuna.setModel(tmsr);

        } catch (Exception e) {
          JOptionPane.showMessageDialog(this, "Sistem ne može da nađe podatke o izabranom računu", "Pretraga računa", JOptionPane.ERROR_MESSAGE);

            //JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void onemoguciIzmenu() {
        jcbKlijent.setEnabled(false);
        jcbRadnik.setEnabled(false);
        jbtnSacuvajRacun.setVisible(false);
        jbtnObrisiStavku.setVisible(false);
        jTabbedPane1.remove(1);
        jTabbedPane1.remove(1);
    }

}
