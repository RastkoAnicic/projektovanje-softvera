/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Klijent;
import domen.Radnik;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import kontrolor.Kontrolor;
import tabela.TblModelKlijenti;
import util.Util;

/**
 *
 * @author Nadin kompjuter
 */
public class FMRadSaKlijentima extends javax.swing.JDialog {

    /**
     * Creates new form FMRadSaKlijentima
     */
    List<Klijent> lista_klijenata;

    public FMRadSaKlijentima(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        lista_klijenata = new LinkedList<>();
        initComponents();
        popuniTabelu();
        postaviUlogovanogRadnika();
        PostaviDocumentListenerPretraga();
        posaviFormu();
        postaviNeaktivnoDugmeDetalji();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtxtPretraga = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblKlijenti = new javax.swing.JTable();
        jbtnDodajKlijenta = new javax.swing.JButton();
        jbtnPogledajDetalje = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Rad sa klijentima");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Pretraga klijenata:");

        jtxtPretraga.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jtblKlijenti.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtblKlijenti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblKlijenti.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtblKlijentiMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtblKlijenti);

        jbtnDodajKlijenta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnDodajKlijenta.setText("Dodaj klijenta");
        jbtnDodajKlijenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajKlijentaActionPerformed(evt);
            }
        });

        jbtnPogledajDetalje.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnPogledajDetalje.setText("Pogledaj detalje");
        jbtnPogledajDetalje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPogledajDetaljeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtPretraga))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbtnDodajKlijenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnPogledajDetalje, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnDodajKlijenta, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jbtnPogledajDetalje, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnDodajKlijentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajKlijentaActionPerformed

        Kontrolor.getInstance().setAktivnaForma(Util.UNOS_KLIJENTA);
        FMKlijent fmDodaj = new FMKlijent(this, true);
        fmDodaj.setVisible(true);


    }//GEN-LAST:event_jbtnDodajKlijentaActionPerformed

    private void jbtnPogledajDetaljeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPogledajDetaljeActionPerformed

        int red = jtblKlijenti.getSelectedRow();
        TblModelKlijenti tmk = (TblModelKlijenti) jtblKlijenti.getModel();
        Klijent klijent = tmk.vratiKlijenta(red);
        Kontrolor.getInstance().setAktivnaForma(Util.DETALJI_KLIJENTA);

        Kontrolor.getInstance().getMapa().put("izabrani_klijent_detalji", klijent);

        FMKlijent fmPogledaj = new FMKlijent(this, true);

        fmPogledaj.setVisible(true);

    }//GEN-LAST:event_jbtnPogledajDetaljeActionPerformed

    private void jtblKlijentiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblKlijentiMousePressed

        jbtnPogledajDetalje.setEnabled(true);
    }//GEN-LAST:event_jtblKlijentiMousePressed
    public void PostaviDocumentListenerPretraga() {
        DocumentListener documentListener = new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent documentEvent) {
                documentListenerPretraga();
                jbtnPogledajDetalje.setEnabled(false);
            }

            @Override
            public void insertUpdate(DocumentEvent documentEvent) {
                documentListenerPretraga();

                jbtnPogledajDetalje.setEnabled(false);

            }

            @Override
            public void removeUpdate(DocumentEvent documentEvent) {
                documentListenerPretraga();
                jbtnPogledajDetalje.setEnabled(false);

            }
        };
        jtxtPretraga.getDocument().addDocumentListener(documentListener);
    }

    private void documentListenerPretraga() {
        String pretraga = jtxtPretraga.getText().trim();
        List<Klijent> filtrirana_lista = new LinkedList<>();
        for (Klijent k : lista_klijenata) {
            if (k.getIme().toUpperCase().contains(pretraga.toUpperCase())
                    || k.getPrezime().toUpperCase().contains(pretraga.toUpperCase())
                    || k.getKontakt().toUpperCase().contains(pretraga.toUpperCase())
                    || k.getMail().toUpperCase().contains(pretraga.toUpperCase())) {
                filtrirana_lista.add(k);
            }
        }
        TblModelKlijenti tbl = new TblModelKlijenti(filtrirana_lista);
        jtblKlijenti.setModel(tbl);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDodajKlijenta;
    private javax.swing.JButton jbtnPogledajDetalje;
    private javax.swing.JTable jtblKlijenti;
    private javax.swing.JTextField jtxtPretraga;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {
        try {

            List<Klijent> lista = Kontrolor.getInstance().vratiListuKlijenata();
            jtblKlijenti.setModel(new TblModelKlijenti(lista));
            lista_klijenata = lista;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    public void osvezi(List<Klijent> lk) {
        azurirajTabelu(lk);
    }

    private void posaviFormu() {
        this.setSize(680, 710);

    }

    void azurirajTabelu(List<Klijent> lk) {
        TblModelKlijenti tmk = (TblModelKlijenti) jtblKlijenti.getModel();
        tmk.azurirajTabelu(lk);
        lista_klijenata.addAll(lk);

    }

    private void postaviUlogovanogRadnika() {
        Radnik radnik = (Radnik) Kontrolor.getInstance().getMapa().get("Ulogovan_radnik");
        this.setTitle(this.getTitle() + " Radnik: " + radnik);
    }

    private void postaviNeaktivnoDugmeDetalji() {
        jbtnPogledajDetalje.setEnabled(false);
    }

    void promeniUTabeli(Klijent k) {
        TblModelKlijenti tmk = (TblModelKlijenti) jtblKlijenti.getModel();
        tmk.izmeni(k);
    }

    void onemoguciDugmeDetalji() {
        jbtnPogledajDetalje.setEnabled(false);
    }
}
